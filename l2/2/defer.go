package main

import "fmt"

func test() (x int) {
	defer func() {
		x++
	}()
	x = 1
	return
}

func anotherTest() int {
	var x int
	defer func() {
		x++
	}()
	x = 1
	return x
}

func main() {
	fmt.Println(test())
	fmt.Println(anotherTest())
}

// Вывод:
// 2
// 1
//
// Объяснение:
// Функция test() возвращает именованное значение x.
// 1. Откладывается вызов анонимной функции, которая увеличивает значение x на 1.
// 2. х присваивается значение 1.
// 3. Происходит возврат текущего значения х.
// 4. Перед выходом из функции выполняется отложенный вызов: значение переменной x увеличивается на 1 (x = 2).
// 5. Из-за того, что x - именованное возвращаемое значение, то его новое значение (2) и будет результатом выполнения функции
//
// Функция anotherTest() возвращает значение типа int.
// 1. Объявляется переменная x типа int (x = 1).
// 2. Откладывается вызов анонимной функции, которая увеличивает значение x на 1.
// 3. Переменной x присваивается значение 1.
// 4. Происходит возврат копии текущего значения x.
// 5. Перед выходом из функции выполняется отложенный вызов: значение локальной переменной x увеличивается на 1 (x = 2).
// 6. Однако возвращаемое значение уже определено (1), поэтому оно не изменится.
