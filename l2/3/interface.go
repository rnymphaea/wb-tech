package main

import (
	"fmt"
	"os"
)

func Foo() error {
	var err *os.PathError = nil
	return err
}

func main() {
	err := Foo()
	fmt.Println(err)
	fmt.Println(err == nil)
}

// Вывод:
// <nil>
// false
//
// Объяснение:
// Интерфейсы включают в себя два поля: информацию о типе и конкретном зачении этого типа (указатель на тип и указатель на значение).
// Переменная err имеет тип *os.PathError и значение nil.
// Поэтому в первой строке будет напечатано значение этой переменной (<nil>).
// Интерфейс является nil тогда и только тогда, когда и тип, и значение равны nil.
// Поэтому во второй строке будет напечатано false, хоть значение и равно nil, но тип - *os.PathError (!= <nil>).
//
// Сравнение обычных интерфейсов и пустых:
// Обычный интерфейс:
// - Определяет набор методов (например, error требует метод Error()).
// - Может быть nil только если тип и значение nil.
// Пустой интерфейс (interface{}):
// - Не требует методов, может хранить любой тип.
// - Может быть nil только если тип и значение nil.
